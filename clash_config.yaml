# 机场订阅
proxy-providers:
  良心云:
    url: "URL对应机场订阅"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300

# 节点信息
proxies:
  - {name: 直连, type: direct}
  - {name: pei-vps-ipv4, server: vps对应ip, port: 12345, client-fingerprint: chrome, type: vmess, uuid: e09d28b0-e0b4-45f7-a954-b261e9fb5db1, alterId: 0, cipher: auto, tls: false, tfo: false, skip-cert-verify: false, network: ws, ws-opts: {path: /asdasd}}
  - {name: pei-vps-ipv6, server: vps对应ipv6, port: 12345, client-fingerprint: chrome, type: vmess, uuid: e09d28b0-e0b4-45f7-a954-b261e9fb5db1, alterId: 0, cipher: auto, tls: false, tfo: false, skip-cert-verify: false, network: ws, ws-opts: {path: /asdasd}}

# 全局配置
port: 7899
socks-port: 7898
redir-port: 7892
mixed-port: 7897
tproxy-port: 7894
allow-lan: true
bind-address: "*"
external-controller: 0.0.0.0:9097
ipv6: true
unified-delay: true
tcp-concurrent: true
# interface-name: enp6s18
log-level: warning
find-process-mode: 'off'
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
profile:
  store-selected: true
  store-fake-ip: true

# 为防止使用插件朋友遇到面板问题，我注释掉了此模块。
# 跑裸核朋友自行删除注释即可，使用nikki仅内核的ui路径改为/etc/nikki/run/ui
#external-controller: 0.0.0.0:9090
#secret: ""
#external-ui: "/etc/mihomo/ui"
#external-ui-name: zashboard
#external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"

# 入站
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  #使用nikki，混入全部不修改的情况，开启接口指定为nikki
  #使用仅内核自行修改下面三项为true
  #device: nikki
  auto-route: false
  auto-redirect: false
  auto-detect-interface: false

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - 'rule-set:private_domain' # 修正：拆分
    - 'rule-set:cn_domain'       # 修正：拆分
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
    - "+.market.xiaomi.com"
    - '*.lan'
    - '*.local'
    - '*.arpa'
    - 'ntp.*.com'
    - 'localhost.ptlogin2.qq.com'
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - 119.29.29.29
  # namesever尽量用运营商提供的DNS
  nameserver:
    - 223.5.5.5
    - 119.29.29.29

# 出站策略
proxy-groups:
  - name: 🌐 全部节点
    type: select
    use:
      - 良心云
    proxies:
      - 直连
      - pei-vps-ipv4
      - pei-vps-ipv6

  - name: 🚀 默认代理
    type: select
    proxies:
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇯🇵 日本节点
      - 🇸🇬 狮城节点
      - 🇺🇲 美国节点
      - 🌐 全部节点
      - 直连

  - name: 📹 YouTube
    type: select
    proxies:
      - 🔯 美国故转
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 狮城故转
      - ♻️ 美国自动
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇯🇵 日本节点
      - 🇸🇬 狮城节点
      - 🇺🇲 美国节点
      - 🌐 全部节点
      - 直连

  - name: 🍀 Google
    type: select
    proxies:
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇯🇵 日本节点
      - 🇸🇬 狮城节点
      - 🇺🇲 美国节点
      - 🌐 全部节点
      - 直连

  - name: 🤖 ChatGPT
    type: select
    proxies:
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇯🇵 日本节点
      - 🇸🇬 狮城节点
      - 🇺🇲 美国节点
      - 🌐 全部节点
      - 直连

  - name: 👨🏿‍💻 GitHub
    type: select
    proxies:
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇯🇵 日本节点
      - 🇸🇬 狮城节点
      - 🇺🇲 美国节点
      - 🌐 全部节点
      - 直连

  - name: 🐬 OneDrive
    type: select
    proxies:
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇯🇵 日本节点
      - 🇸🇬 狮城节点
      - 🇺🇲 美国节点
      - 🌐 全部节点
      - 直连

  - name: 🪟 Microsoft
    type: select
    proxies:
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇯🇵 日本节点
      - 🇸🇬 狮城节点
      - 🇺🇲 美国节点
      - 🌐 全部节点
      - 直连

  - name: 🎵 TikTok
    type: select
    proxies:
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇯🇵 日本节点
      - 🇸🇬 狮城节点
      - 🇺🇲 美国节点
      - 🌐 全部节点
      - 直连

  - name: 📲 Telegram
    type: select
    proxies:
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇯🇵 日本节点
      - 🇸🇬 狮城节点
      - 🇺🇲 美国节点
      - 🌐 全部节点
      - 直连

  - name: 🎥 NETFLIX
    type: select
    proxies:
      - 🔯 狮城故转
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇯🇵 日本节点
      - 🇸🇬 狮城节点
      - 🇺🇲 美国节点
      - 🌐 全部节点
      - 直连

  - name: 💶 PayPal
    type: select
    proxies:
      - 🔯 日本故转
      - 🔯 香港故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇯🇵 日本节点
      - 🇸🇬 狮城节点
      - 🇺🇲 美国节点
      - 🌐 全部节点
      - 直连

  - name: 🐟 漏网之鱼
    type: select
    proxies:
      - 🚀 默认代理
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇯🇵 日本节点
      - 🇸🇬 狮城节点
      - 🇺🇲 美国节点
      - 🌐 全部节点
      - 直连

  # --- 修正：以下所有 `include-all: true` 均改为 `use: [良心云]` ---
  - name: 🇭🇰 香港节点
    type: select
    use:
      - 良心云
    filter: "(?i)港|hk|hongkong|hong kong"

  - name: 🇯🇵 日本节点
    type: select
    use:
      - 良心云
    filter: "(?i)日|jp|japan"

  - name: 🇸🇬 狮城节点
    type: select
    use:
      - 良心云
    filter: "(?i)新加坡|坡|狮城|SG|Singapore"

  - name: 🇺🇲 美国节点
    type: select
    use:
      - 良心云
    filter: "(?i)美|us|unitedstates|united states"

  - name: 🔯 香港故转
    type: fallback
    use:
      - 良心云
    tolerance: 20
    interval: 300
    filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"

  - name: 🔯 日本故转
    type: fallback
    use:
      - 良心云
    tolerance: 20
    interval: 300
    filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$"

  - name: 🔯 狮城故转
    type: fallback
    use:
      - 良心云
    tolerance: 20
    interval: 300
    filter: "(?=.*(新加坡|坡|狮城|SG|Singapore))^((?!(台|日|韩|深|美)).)*$"

  - name: 🔯 美国故转
    type: fallback
    use:
      - 良心云
    tolerance: 20
    interval: 300
    filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|韩|新|日)).)*$"

  - name: ♻️ 香港自动
    type: url-test
    use:
      - 良心云
    tolerance: 20
    interval: 300
    filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"

  - name: ♻️ 日本自动
    type: url-test
    use:
      - 良心云
    tolerance: 20
    interval: 300
    filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$"

  # 修正：已删除此处的 "Salesforce"
  - name: ♻️ 狮城自动
    type: url-test
    use:
      - 良心云
    tolerance: 20
    interval: 300
    filter: "(?=.*(新加坡|坡|狮城|SG|Singapore))^((?!(港|台|韩|日|美)).)*$"

  - name: ♻️ 美国自动
    type: url-test
    use:
      - 良心云
    tolerance: 20
    interval: 300
    filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|日|韩|新)).)*$"

  - name: ♻️ 自动选择
    type: url-test
    use:
      - 良心云
    proxies:
      - pei-vps-ipv4
      - pei-vps-ipv6
    tolerance: 20
    interval: 300
    filter: "^((?!(直连)).)*$"

# 规则匹配
# 此规则部分没有做防泄露处理，因为弊严重大于利！
rules:
  - RULE-SET,reject,REJECT
  - RULE-SET,adblock,REJECT
  - RULE-SET,private_ip,直连,no-resolve
  - RULE-SET,applications,直连
  - RULE-SET,private_domain,直连
  - RULE-SET,lancidr,直连
  - RULE-SET,proxylite,🚀 默认代理
  - RULE-SET,apple,直连
  - RULE-SET,ai,🤖 ChatGPT
  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,onedrive_domain,🐬 OneDrive
  - RULE-SET,microsoft_domain,🪟 Microsoft
  - RULE-SET,apple_domain,直连
  - RULE-SET,tiktok_domain,🎵 TikTok
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,netflix_domain,🎥 NETFLIX
  - RULE-SET,paypal_domain,💶 PayPal
  - RULE-SET,apple_ip,直连
  - RULE-SET,google_ip,🍀 Google
  - RULE-SET,netflix_ip,🎥 NETFLIX
  - RULE-SET,telegram_ip,📲 Telegram
  - RULE-SET,geolocation-!cn,🚀 默认代理
  - RULE-SET,cn_domain,直连
  - RULE-SET,cn_ip,直连
  - MATCH,🐟 漏网之鱼

# 规则集
## type：可选http/file/inline  behavior：可选domain/ipcidr/classical format：可选yaml/text/mrs

# 修正：将 `rule-anchor:` 改为 `.anchors:`
.anchors:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers:
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  proxylite: { <<: *class, url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/main/proxy.list"}
  ai: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs" }
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  github_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  onedrive_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"}
  speedtest_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  'geolocation-!cn': { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}

  private_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"}
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  apple_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geoip/apple.mrs"}

  # from https://github.com/Loyalsoldier/clash-rules
  reject:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"
    path: ./ruleset/reject.yaml
    interval: 86400

  applications:
    type: http
    behavior: classical
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"
    path: ./ruleset/applications.yaml
    interval: 86400

  apple:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt"
    path: ./ruleset/apple.yaml
    interval: 86400

  lancidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"
    path: ./ruleset/lancidr.yaml
    interval: 86400


  # 广告拦截 https://github.com/REIJI007/AdBlock_Rule_For_Clash
  adblock:
    type: http
    behavior: domain
    format: yaml
    url: https://raw.githubusercontent.com/REIJI007/AdBlock_Rule_For_Clash/main/adblock_reject.yaml
    path: ./ruleset/adblock_reject.yaml
    interval: 120